--> In Ascending Order:

package sorting_algorithm.selection_sort.ascending_order;

class SortingInAscendingOrder {

	
	//In best/average/worst case--> Time Complexity = O(n^2)
	public static void selectionSort(int [] arr,int size) {
		
		boolean swapOccured=false;
		
		for(int i=0;i<size-1;i++) {
			
			int smallestElementIndex=i;
			
			for(int j=i+1;j<size;j++) {
				
				if(arr[j]<arr[smallestElementIndex]) {
					smallestElementIndex=j;
					swapOccured=true;
				}
				
			}
			
		    int temp=arr[i];
		    arr[i]=arr[smallestElementIndex];
		    arr[smallestElementIndex]=temp;
		
		    if(!swapOccured) {
		    	break;
		    }
		    
		}
		
		if(!swapOccured) {
			System.out.println("Array is already sorted in adcending order!");
	    }
		else {
			for(int a:arr) {
				System.out.print(a+" ");
			}
		}
		
	}
	

}



public class Main {

	public static void main(String[] args) {

		int[] array= {15,7,3,9,1,12};
		int size=array.length;
		
		SortingInAscendingOrder.selectionSort(array,size);
		
	}

}



--> In Descending Order:

package sorting_algorithm.selection_sort.descending_order;

class SortingInDescendingOrder {

	
	//In best/average/worst case--> Time Complexity = O(n^2)
	public static void selectionSort(int [] arr,int size) {		
		
		for(int i=0;i<size-1;i++) {
			
			int largestElementIndex=i;
			
			for(int j=i+1;j<size;j++) {
				
				if(arr[j]>arr[largestElementIndex]) {					
					largestElementIndex=j;				
				}
				
			}
			
		    int temp=arr[i];
		    arr[i]=arr[largestElementIndex];
		    arr[largestElementIndex]=temp;
		    
		}		
		
		for(int a:arr) {
			System.out.print(a+" ");
		}		
		
	}
	

}



public class Main {

	public static void main(String[] args) {

		int[] array= {15,7,3,9,1,12};
		int size=array.length;
		
		SortingInDescendingOrder.selectionSort(array,size);
		
	}

}


	

	

//	
//	int temp=arr[i];
//	arr[i]=arr[smallestElementIndex];
//	arr[smallestElementIndex]=temp;
//	
//}
