public class Quick_Sort {

	public static int partition(int[] arr,int start,int end) {
		
		//If first element considered as pivot
		int i=start;
		int j=end;
		
		int pivot=arr[start];
		
		while(i<j) {
			while(i<=end && arr[i]<=pivot ) {
				i++;
			}
			while(j>=start && arr[j]>pivot ) {
				j--;
			}
			if(i<j) {
				int temp=arr[i];
				arr[i]=arr[j];
				arr[j]=temp;
			}
			
		}
		
		int temp=arr[start];
		arr[start]=arr[j];
		arr[j]=temp;
		
		return j;		
		
//If last element considered as pivot
//		int pivot=arr[end];
//		int i=start-1;
//		for(int j=0;j<end;j++) {
//			if(arr[j]<=pivot) {
//				i++;
//				int temp=arr[i];
//				arr[i]=arr[j];
//				arr[j]=temp;
//			}
//		}
//		
//		i++;
//		int temp=arr[i];
//		arr[i]=arr[end];
//		arr[end]=temp;
//		
//		return end;
		
	}
	public static void quickSort(int[] arr,int start,int end) {
		if(start<end) {
			  int pivotIndex=partition(arr,start,end);
			    quickSort(arr,start,pivotIndex-1);
			    quickSort(arr,pivotIndex+1,end);
		}
	  
	}


	public static void display(int[] arr){
		for(int a:arr){
			System.out.println(a);
		}
	}
	
	public static void main(String[] args) {
		int[] array= {15,7,3,9,1,12};
		int start=0;
		int end=(array.length)-1;
		
		quickSort(array,start,end);
		display(array);

	}

}
