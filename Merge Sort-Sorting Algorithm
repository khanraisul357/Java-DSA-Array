--> In Ascending Order:

package sorting_algorithm.merge_sort.ascending_order;

class MergeSortInAscendingOrder {
	
	//In best/average/worst case--> Time Complexity = O(n log n)
	public static void merge(int[] arr,int start,int mid,int end) {
		
		int i=start,j=mid+1,k=0;
		int[] temp=new int[(end-start)+1];
		
		while(i<=mid && j<=end) {
			if(arr[i]<=arr[j]) {
				temp[k]=arr[i];
				i++;
				k++;
			}
			else {
				temp[k]=arr[j];
				j++;
				k++;
			}
		}
		
		while(i<=mid) {
			temp[k]=arr[i];
			i++;
			k++;
		}
		
		while(j<=end) {
			temp[k]=arr[j];
			j++;
			k++;
		}
		
		for(int idx=0;idx<temp.length;idx++) {
			arr[start+idx]=temp[idx];
		}
		
	}
	
	public static void mergeSort(int[] arr,int start,int end) {
		
		if(start<end) {
			int mid=start+(end-start)/2;
			mergeSort(arr,start,mid);
			mergeSort(arr,mid+1,end);
			merge(arr,start,mid,end);
		}
	}	  

}



public class Main {

	public static void main(String[] args) {
		
		int[] array= {16,7,4,11,2,19};
		int start=0;
		int end=(array.length)-1;
		
		MergeSortInAscendingOrder.mergeSort(array,start,end);
		
		if(array.length<2) {
			System.out.println("Array is already sorted!");
		}
		
		else {
			
			for(int a:array){
				System.out.println(a);
			}
			
		}
		
	}

}



--> In Descending Order:

package sorting_algorithm.merge_sort.descending_order;

public class MergeSortInDescendingOrder {	
	

	public static void merge(int[] arr,int start,int mid,int end) {
		int i=start;
		int j=mid+1;
		int[] temp=new int[end-start+1];
		int k=0;
		
		while(i<=mid && j<=end) {
			if(arr[i]>arr[j]) {
				temp[k]=arr[i];
				i++;
				k++;
			}
			else {
				temp[k]=arr[j];
				j++;
				k++;
			}
		}
		
		while(i<=mid) {
			temp[k]=arr[i];
			i++;
			k++;
			
		}
		while(j<=end) {
			temp[k]=arr[j];
			j++;
			k++;
		
		}
		
		for(int idx=0;idx<temp.length;idx++) {
			arr[start+idx]=temp[idx];
		}
		
	}
	
	public static void mergeSort(int[] arr,int start,int end) {
		if(start<end) {
			int mid=(start+end)/2;//start+(end-start)/2;
			mergeSort(arr,start,mid);
			mergeSort(arr,mid+1,end);
			merge(arr,start,mid,end);
		}
		
	}
	
	public static void display(int[] arr){
		for(int a:arr){
			System.out.println(a);
		}
	}

	

}
